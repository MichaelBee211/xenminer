// Code generated - DO NOT EDIT.
// This file is a generated binding and any manual changes will be lost.

package netinit100

import (
	"errors"
	"math/big"
	"strings"

	ethereum "github.com/ethereum/go-ethereum"
	"github.com/ethereum/go-ethereum/accounts/abi"
	"github.com/ethereum/go-ethereum/accounts/abi/bind"
	"github.com/ethereum/go-ethereum/common"
	"github.com/ethereum/go-ethereum/core/types"
	"github.com/ethereum/go-ethereum/event"
)

// Reference imports to suppress errors if they are not otherwise used.
var (
	_ = errors.New
	_ = big.NewInt
	_ = strings.NewReader
	_ = ethereum.NotFound
	_ = bind.Bind
	_ = common.Big1
	_ = types.BloomLookup
	_ = event.NewSubscription
)

// ContractMetaData contains all meta data concerning the Contract contract.
var ContractMetaData = &bind.MetaData{
	ABI: "[{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"sealedEpoch\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalSupply\",\"type\":\"uint256\"},{\"internalType\":\"addresspayable\",\"name\":\"_sfc\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_lib\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_auth\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_driver\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_evmWriter\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"initializeAll\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]",
	Bin: "0x608060405234801561001057600080fd5b506126a1806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c806329e83e2914610030575b600080fd5b610098600480360361010081101561004757600080fd5b5080359060208101359073ffffffffffffffffffffffffffffffffffffffff60408201358116916060810135821691608082013581169160a081013582169160c082013581169160e001351661009a565b005b604080517f485cc95500000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8681166004830152848116602483015291519185169163485cc9559160448082019260009290919082900301818387803b15801561011357600080fd5b505af1158015610127573d6000803e3d6000fd5b5050604080517fc0c53b8b00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8a81166004830152878116602483015285811660448301529151918816935063c0c53b8b925060648082019260009290919082900301818387803b1580156101ac57600080fd5b505af11580156101c0573d6000803e3d6000fd5b5050505060006040516101d290610ade565b604051809103906000f0801580156101ee573d6000803e3d6000fd5b5090508073ffffffffffffffffffffffffffffffffffffffff16638129fc1c6040518163ffffffff1660e01b8152600401600060405180830381600087803b15801561023957600080fd5b505af115801561024d573d6000803e3d6000fd5b505050508073ffffffffffffffffffffffffffffffffffffffff1663866c4b176969e10de76676d08000006040518263ffffffff1660e01b815260040180828152602001915050600060405180830381600087803b1580156102ae57600080fd5b505af11580156102c2573d6000803e3d6000fd5b505050508073ffffffffffffffffffffffffffffffffffffffff166381ffcdf16102ea610ad2565b6010026040518263ffffffff1660e01b815260040180828152602001915050600060405180830381600087803b15801561032357600080fd5b505af1158015610337573d6000803e3d6000fd5b505050508073ffffffffffffffffffffffffffffffffffffffff16632ee711326064610361610ad2565b600f028161036b57fe5b046040518263ffffffff1660e01b815260040180828152602001915050600060405180830381600087803b1580156103a257600080fd5b505af11580156103b6573d6000803e3d6000fd5b505050508073ffffffffffffffffffffffffffffffffffffffff16632bb9fe8d60646103e0610ad2565b601402816103ea57fe5b046040518263ffffffff1660e01b815260040180828152602001915050600060405180830381600087803b15801561042157600080fd5b505af1158015610435573d6000803e3d6000fd5b505050508073ffffffffffffffffffffffffffffffffffffffff1663f8d5177e606461045f610ad2565b600a028161046957fe5b046040518263ffffffff1660e01b815260040180828152602001915050600060405180830381600087803b1580156104a057600080fd5b505af11580156104b4573d6000803e3d6000fd5b505050508073ffffffffffffffffffffffffffffffffffffffff16637945ef9960646104de610ad2565b601e02816104e857fe5b046040518263ffffffff1660e01b815260040180828152602001915050600060405180830381600087803b15801561051f57600080fd5b505af1158015610533573d6000803e3d6000fd5b505050508073ffffffffffffffffffffffffffffffffffffffff1663bf25338b621275006040518263ffffffff1660e01b815260040180828152602001915050600060405180830381600087803b15801561058d57600080fd5b505af11580156105a1573d6000803e3d6000fd5b505050508073ffffffffffffffffffffffffffffffffffffffff1663ad7b3f7b6301e133806040518263ffffffff1660e01b815260040180828152602001915050600060405180830381600087803b1580156105fc57600080fd5b505af1158015610610573d6000803e3d6000fd5b505050508073ffffffffffffffffffffffffffffffffffffffff16638f078bfa60036040518263ffffffff1660e01b815260040180828152602001915050600060405180830381600087803b15801561066857600080fd5b505af115801561067c573d6000803e3d6000fd5b505050508073ffffffffffffffffffffffffffffffffffffffff1663455366a462093a806040518263ffffffff1660e01b815260040180828152602001915050600060405180830381600087803b1580156106d657600080fd5b505af11580156106ea573d6000803e3d6000fd5b505050508073ffffffffffffffffffffffffffffffffffffffff1663b6d9edd5672508fab977b917d06040518263ffffffff1660e01b815260040180828152602001915050600060405180830381600087803b15801561074957600080fd5b505af115801561075d573d6000803e3d6000fd5b505050508073ffffffffffffffffffffffffffffffffffffffff16636348ebb8620697806040518263ffffffff1660e01b815260040180828152602001915050600060405180830381600087803b1580156107b757600080fd5b505af11580156107cb573d6000803e3d6000fd5b505050508073ffffffffffffffffffffffffffffffffffffffff16632e84e8e66103e86040518263ffffffff1660e01b815260040180828152602001915050600060405180830381600087803b15801561082457600080fd5b505af1158015610838573d6000803e3d6000fd5b505050508073ffffffffffffffffffffffffffffffffffffffff166343326867621e84806040518263ffffffff1660e01b815260040180828152602001915050600060405180830381600087803b15801561089257600080fd5b505af11580156108a6573d6000803e3d6000fd5b505050508073ffffffffffffffffffffffffffffffffffffffff1663d3f48dbe610e106040518263ffffffff1660e01b815260040180828152602001915050600060405180830381600087803b1580156108ff57600080fd5b505af1158015610913573d6000803e3d6000fd5b505050508073ffffffffffffffffffffffffffffffffffffffff166302b769a164746a5288006040518263ffffffff1660e01b815260040180828152602001915050600060405180830381600087803b15801561096f57600080fd5b505af1158015610983573d6000803e3d6000fd5b505050508073ffffffffffffffffffffffffffffffffffffffff1663f2fde38b836040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050600060405180830381600087803b158015610a0657600080fd5b505af1158015610a1a573d6000803e3d6000fd5b5050604080517f10e51e14000000000000000000000000000000000000000000000000000000008152600481018d9052602481018c905273ffffffffffffffffffffffffffffffffffffffff89811660448301528a81166064830152858116608483015286811660a48301529151918b1693506310e51e14925060c48082019260009290919082900301818387803b158015610ab557600080fd5b505af1158015610ac9573d6000803e3d6000fd5b50600092505050ff5b670de0b6b3a764000090565b611b8180610aec8339019056fe608060405234801561001057600080fd5b50611b61806100206000396000f3fe608060405234801561001057600080fd5b50600436106102765760003560e01c80637945ef9911610160578063ad7b3f7b116100d8578063c74dd6211161008c578063d9a7c1f911610071578063d9a7c1f914610517578063f2fde38b1461051f578063f8d5177e1461055257610276565b8063c74dd621146104f2578063d3f48dbe146104fa57610276565b8063b82b8427116100bd578063b82b8427146104c5578063bf25338b146104cd578063c5f530af146104ea57610276565b8063ad7b3f7b1461048b578063b6d9edd5146104a857610276565b80638da5cb5b1161012f5780638f32d59b116101145780638f32d59b1461045f57806394c3e9141461047b578063a77865151461048357610276565b80638da5cb5b146104115780638f078bfa1461044257610276565b80637945ef99146103b25780638129fc1c146103cf57806381ffcdf1146103d7578063866c4b17146103f457610276565b806338eca546116101f35780635a68f01a116101c25780636348ebb8116101a75780636348ebb814610385578063650acd66146103a2578063715018a6146103aa57610276565b80635a68f01a146103755780635e2308d21461037d57610276565b806338eca5461461032b5780633a3ef66c14610333578063433268671461033b578063455366a41461035857610276565b80632265f2841161024a5780632c8c36a51161022f5780632c8c36a5146102e95780632e84e8e6146102f15780632ee711321461030e57610276565b80632265f284146102c45780632bb9fe8d146102cc57610276565b8062cc7f831461027b57806302b769a1146102955780630d4955e3146102b45780630d7b2609146102bc575b600080fd5b61028361056f565b60408051918252519081900360200190f35b6102b2600480360360208110156102ab57600080fd5b5035610575565b005b610283610684565b61028361068a565b610283610690565b6102b2600480360360208110156102e257600080fd5b5035610696565b61028361075a565b6102b26004803603602081101561030757600080fd5b5035610760565b6102b26004803603602081101561032457600080fd5b503561086c565b610283610930565b610283610936565b6102b26004803603602081101561035157600080fd5b503561093c565b6102b26004803603602081101561036e57600080fd5b5035610a4b565b610283610b59565b610283610b5f565b6102b26004803603602081101561039b57600080fd5b5035610b65565b610283610c73565b6102b2610c79565b6102b2600480360360208110156103c857600080fd5b5035610d41565b6102b2610e6e565b6102b2600480360360208110156103ed57600080fd5b5035610f71565b6102b26004803603602081101561040a57600080fd5b503561108a565b6104196111a7565b6040805173ffffffffffffffffffffffffffffffffffffffff9092168252519081900360200190f35b6102b26004803603602081101561045857600080fd5b50356111c3565b6104676112cd565b604080519115158252519081900360200190f35b6102836112eb565b6102836112f1565b6102b2600480360360208110156104a157600080fd5b50356112f7565b6102b2600480360360208110156104be57600080fd5b5035611406565b61028361151f565b6102b2600480360360208110156104e357600080fd5b5035611525565b610283611633565b610283611639565b6102b26004803603602081101561051057600080fd5b503561163f565b61028361174b565b6102b26004803603602081101561053557600080fd5b503573ffffffffffffffffffffffffffffffffffffffff16611751565b6102b26004803603602081101561056857600080fd5b50356117b3565b60725481565b61057d6112cd565b6105ce576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b6001811015610624576040805162461bcd60e51b815260206004820152600f60248201527f746f6f20736d616c6c2076616c75650000000000000000000000000000000000604482015290519081900360640190fd5b6509184e72a00081111561067f576040805162461bcd60e51b815260206004820152600f60248201527f746f6f206c617267652076616c75650000000000000000000000000000000000604482015290519081900360640190fd5b607555565b606d5481565b606c5481565b60675481565b61069e6112cd565b6106ef576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b60026106f9611877565b8161070057fe5b04811115610755576040805162461bcd60e51b815260206004820152600f60248201527f746f6f206c617267652076616c75650000000000000000000000000000000000604482015290519081900360640190fd5b606955565b60745481565b6107686112cd565b6107b9576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b606481101561080f576040805162461bcd60e51b815260206004820152600f60248201527f746f6f20736d616c6c2076616c75650000000000000000000000000000000000604482015290519081900360640190fd5b620f4240811115610867576040805162461bcd60e51b815260206004820152600f60248201527f746f6f206c617267652076616c75650000000000000000000000000000000000604482015290519081900360640190fd5b607155565b6108746112cd565b6108c5576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b60026108cf611877565b816108d657fe5b0481111561092b576040805162461bcd60e51b815260206004820152600f60248201527f746f6f206c617267652076616c75650000000000000000000000000000000000604482015290519081900360640190fd5b606855565b60755481565b60735481565b6109446112cd565b610995576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b620f42408110156109ed576040805162461bcd60e51b815260206004820152600f60248201527f746f6f20736d616c6c2076616c75650000000000000000000000000000000000604482015290519081900360640190fd5b631dcd6500811115610a46576040805162461bcd60e51b815260206004820152600f60248201527f746f6f206c617267652076616c75650000000000000000000000000000000000604482015290519081900360640190fd5b607355565b610a536112cd565b610aa4576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b62015180811015610afc576040805162461bcd60e51b815260206004820152600f60248201527f746f6f20736d616c6c2076616c75650000000000000000000000000000000000604482015290519081900360640190fd5b62278d00811115610b54576040805162461bcd60e51b815260206004820152600f60248201527f746f6f206c617267652076616c75650000000000000000000000000000000000604482015290519081900360640190fd5b606f55565b60715481565b606b5481565b610b6d6112cd565b610bbe576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b62015180811015610c16576040805162461bcd60e51b815260206004820152600f60248201527f746f6f20736d616c6c2076616c75650000000000000000000000000000000000604482015290519081900360640190fd5b620d2f00811115610c6e576040805162461bcd60e51b815260206004820152600f60248201527f746f6f206c617267652076616c75650000000000000000000000000000000000604482015290519081900360640190fd5b607255565b606e5481565b610c816112cd565b610cd2576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b60335460405160009173ffffffffffffffffffffffffffffffffffffffff16907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3603380547fffffffffffffffffffffffff0000000000000000000000000000000000000000169055565b610d496112cd565b610d9a576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b6064610da4611877565b60050281610dae57fe5b04811015610e03576040805162461bcd60e51b815260206004820152600f60248201527f746f6f20736d616c6c2076616c75650000000000000000000000000000000000604482015290519081900360640190fd5b6002610e0d611877565b81610e1457fe5b04811115610e69576040805162461bcd60e51b815260206004820152600f60248201527f746f6f206c617267652076616c75650000000000000000000000000000000000604482015290519081900360640190fd5b606b55565b600054610100900460ff1680610e875750610e87611883565b80610e95575060005460ff16155b610ed05760405162461bcd60e51b815260040180806020018281038252602e815260200180611aff602e913960400191505060405180910390fd5b600054610100900460ff16158015610f3657600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff909116610100171660011790555b610f3f33611889565b8015610f6e57600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff1690555b50565b610f796112cd565b610fca576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b610fd2611877565b811015611026576040805162461bcd60e51b815260206004820152600f60248201527f746f6f20736d616c6c2076616c75650000000000000000000000000000000000604482015290519081900360640190fd5b61102e611877565b601f02811115611085576040805162461bcd60e51b815260206004820152600f60248201527f746f6f206c617267652076616c75650000000000000000000000000000000000604482015290519081900360640190fd5b606755565b6110926112cd565b6110e3576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b69152d02c7e14af6800000811015611142576040805162461bcd60e51b815260206004820152600f60248201527f746f6f20736d616c6c2076616c75650000000000000000000000000000000000604482015290519081900360640190fd5b6a084595161401484a0000008111156111a2576040805162461bcd60e51b815260206004820152600f60248201527f746f6f206c617267652076616c75650000000000000000000000000000000000604482015290519081900360640190fd5b606655565b60335473ffffffffffffffffffffffffffffffffffffffff1690565b6111cb6112cd565b61121c576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b6002811015611272576040805162461bcd60e51b815260206004820152600f60248201527f746f6f20736d616c6c2076616c75650000000000000000000000000000000000604482015290519081900360640190fd5b60648111156112c8576040805162461bcd60e51b815260206004820152600f60248201527f746f6f206c617267652076616c75650000000000000000000000000000000000604482015290519081900360640190fd5b606e55565b60335473ffffffffffffffffffffffffffffffffffffffff16331490565b606a5481565b60685481565b6112ff6112cd565b611350576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b62278d008110156113a8576040805162461bcd60e51b815260206004820152600f60248201527f746f6f20736d616c6c2076616c75650000000000000000000000000000000000604482015290519081900360640190fd5b630784ce00811115611401576040805162461bcd60e51b815260206004820152600f60248201527f746f6f206c617267652076616c75650000000000000000000000000000000000604482015290519081900360640190fd5b606d55565b61140e6112cd565b61145f576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b6706f05b59d3b200008110156114bc576040805162461bcd60e51b815260206004820152600f60248201527f746f6f20736d616c6c2076616c75650000000000000000000000000000000000604482015290519081900360640190fd5b6801bc16d674ec80000081111561151a576040805162461bcd60e51b815260206004820152600f60248201527f746f6f206c617267652076616c75650000000000000000000000000000000000604482015290519081900360640190fd5b607055565b606f5481565b61152d6112cd565b61157e576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b620151808110156115d6576040805162461bcd60e51b815260206004820152600f60248201527f746f6f20736d616c6c2076616c75650000000000000000000000000000000000604482015290519081900360640190fd5b62278d0081111561162e576040805162461bcd60e51b815260206004820152600f60248201527f746f6f206c617267652076616c75650000000000000000000000000000000000604482015290519081900360640190fd5b606c55565b60665481565b60695481565b6116476112cd565b611698576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b60648110156116ee576040805162461bcd60e51b815260206004820152600f60248201527f746f6f20736d616c6c2076616c75650000000000000000000000000000000000604482015290519081900360640190fd5b620d2f00811115611746576040805162461bcd60e51b815260206004820152600f60248201527f746f6f206c617267652076616c75650000000000000000000000000000000000604482015290519081900360640190fd5b607455565b60705481565b6117596112cd565b6117aa576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b610f6e816119f8565b6117bb6112cd565b61180c576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b6002611816611877565b8161181d57fe5b04811115611872576040805162461bcd60e51b815260206004820152600f60248201527f746f6f206c617267652076616c75650000000000000000000000000000000000604482015290519081900360640190fd5b606a55565b670de0b6b3a764000090565b303b1590565b600054610100900460ff16806118a257506118a2611883565b806118b0575060005460ff16155b6118eb5760405162461bcd60e51b815260040180806020018281038252602e815260200180611aff602e913960400191505060405180910390fd5b600054610100900460ff1615801561195157600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff909116610100171660011790555b603380547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff84811691909117918290556040519116906000907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a380156119f457600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff1690555b5050565b73ffffffffffffffffffffffffffffffffffffffff8116611a4a5760405162461bcd60e51b8152600401808060200182810382526026815260200180611ad96026913960400191505060405180910390fd5b60335460405173ffffffffffffffffffffffffffffffffffffffff8084169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3603380547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff9290921691909117905556fe4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373436f6e747261637420696e7374616e63652068617320616c7265616479206265656e20696e697469616c697a6564a265627a7a72315820a66ff1d0075ebc7eff9c2e0ad68fcc90ad880a3accd69c8990de69bb6643eb1964736f6c63430005110032a265627a7a72315820fcecf216ff5beb5aad4fb1a418703d008592779b9404dec9428d69d97c7de14764736f6c63430005110032",
}

// ContractABI is the input ABI used to generate the binding from.
// Deprecated: Use ContractMetaData.ABI instead.
var ContractABI = ContractMetaData.ABI

// ContractBin is the compiled bytecode used for deploying new contracts.
// Deprecated: Use ContractMetaData.Bin instead.
var ContractBin = ContractMetaData.Bin

// DeployContract deploys a new Ethereum contract, binding an instance of Contract to it.
func DeployContract(auth *bind.TransactOpts, backend bind.ContractBackend) (common.Address, *types.Transaction, *Contract, error) {
	parsed, err := ContractMetaData.GetAbi()
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	if parsed == nil {
		return common.Address{}, nil, nil, errors.New("GetABI returned nil")
	}

	address, tx, contract, err := bind.DeployContract(auth, *parsed, common.FromHex(ContractBin), backend)
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	return address, tx, &Contract{ContractCaller: ContractCaller{contract: contract}, ContractTransactor: ContractTransactor{contract: contract}, ContractFilterer: ContractFilterer{contract: contract}}, nil
}

// Contract is an auto generated Go binding around an Ethereum contract.
type Contract struct {
	ContractCaller     // Read-only binding to the contract
	ContractTransactor // Write-only binding to the contract
	ContractFilterer   // Log filterer for contract events
}

// ContractCaller is an auto generated read-only Go binding around an Ethereum contract.
type ContractCaller struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// ContractTransactor is an auto generated write-only Go binding around an Ethereum contract.
type ContractTransactor struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// ContractFilterer is an auto generated log filtering Go binding around an Ethereum contract events.
type ContractFilterer struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// ContractSession is an auto generated Go binding around an Ethereum contract,
// with pre-set call and transact options.
type ContractSession struct {
	Contract     *Contract         // Generic contract binding to set the session for
	CallOpts     bind.CallOpts     // Call options to use throughout this session
	TransactOpts bind.TransactOpts // Transaction auth options to use throughout this session
}

// ContractCallerSession is an auto generated read-only Go binding around an Ethereum contract,
// with pre-set call options.
type ContractCallerSession struct {
	Contract *ContractCaller // Generic contract caller binding to set the session for
	CallOpts bind.CallOpts   // Call options to use throughout this session
}

// ContractTransactorSession is an auto generated write-only Go binding around an Ethereum contract,
// with pre-set transact options.
type ContractTransactorSession struct {
	Contract     *ContractTransactor // Generic contract transactor binding to set the session for
	TransactOpts bind.TransactOpts   // Transaction auth options to use throughout this session
}

// ContractRaw is an auto generated low-level Go binding around an Ethereum contract.
type ContractRaw struct {
	Contract *Contract // Generic contract binding to access the raw methods on
}

// ContractCallerRaw is an auto generated low-level read-only Go binding around an Ethereum contract.
type ContractCallerRaw struct {
	Contract *ContractCaller // Generic read-only contract binding to access the raw methods on
}

// ContractTransactorRaw is an auto generated low-level write-only Go binding around an Ethereum contract.
type ContractTransactorRaw struct {
	Contract *ContractTransactor // Generic write-only contract binding to access the raw methods on
}

// NewContract creates a new instance of Contract, bound to a specific deployed contract.
func NewContract(address common.Address, backend bind.ContractBackend) (*Contract, error) {
	contract, err := bindContract(address, backend, backend, backend)
	if err != nil {
		return nil, err
	}
	return &Contract{ContractCaller: ContractCaller{contract: contract}, ContractTransactor: ContractTransactor{contract: contract}, ContractFilterer: ContractFilterer{contract: contract}}, nil
}

// NewContractCaller creates a new read-only instance of Contract, bound to a specific deployed contract.
func NewContractCaller(address common.Address, caller bind.ContractCaller) (*ContractCaller, error) {
	contract, err := bindContract(address, caller, nil, nil)
	if err != nil {
		return nil, err
	}
	return &ContractCaller{contract: contract}, nil
}

// NewContractTransactor creates a new write-only instance of Contract, bound to a specific deployed contract.
func NewContractTransactor(address common.Address, transactor bind.ContractTransactor) (*ContractTransactor, error) {
	contract, err := bindContract(address, nil, transactor, nil)
	if err != nil {
		return nil, err
	}
	return &ContractTransactor{contract: contract}, nil
}

// NewContractFilterer creates a new log filterer instance of Contract, bound to a specific deployed contract.
func NewContractFilterer(address common.Address, filterer bind.ContractFilterer) (*ContractFilterer, error) {
	contract, err := bindContract(address, nil, nil, filterer)
	if err != nil {
		return nil, err
	}
	return &ContractFilterer{contract: contract}, nil
}

// bindContract binds a generic wrapper to an already deployed contract.
func bindContract(address common.Address, caller bind.ContractCaller, transactor bind.ContractTransactor, filterer bind.ContractFilterer) (*bind.BoundContract, error) {
	parsed, err := abi.JSON(strings.NewReader(ContractABI))
	if err != nil {
		return nil, err
	}
	return bind.NewBoundContract(address, parsed, caller, transactor, filterer), nil
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_Contract *ContractRaw) Call(opts *bind.CallOpts, result *[]interface{}, method string, params ...interface{}) error {
	return _Contract.Contract.ContractCaller.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_Contract *ContractRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _Contract.Contract.ContractTransactor.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_Contract *ContractRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _Contract.Contract.ContractTransactor.contract.Transact(opts, method, params...)
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_Contract *ContractCallerRaw) Call(opts *bind.CallOpts, result *[]interface{}, method string, params ...interface{}) error {
	return _Contract.Contract.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_Contract *ContractTransactorRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _Contract.Contract.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_Contract *ContractTransactorRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _Contract.Contract.contract.Transact(opts, method, params...)
}

// InitializeAll is a paid mutator transaction binding the contract method 0x29e83e29.
//
// Solidity: function initializeAll(uint256 sealedEpoch, uint256 totalSupply, address _sfc, address _lib, address _auth, address _driver, address _evmWriter, address _owner) returns()
func (_Contract *ContractTransactor) InitializeAll(opts *bind.TransactOpts, sealedEpoch *big.Int, totalSupply *big.Int, _sfc common.Address, _lib common.Address, _auth common.Address, _driver common.Address, _evmWriter common.Address, _owner common.Address) (*types.Transaction, error) {
	return _Contract.contract.Transact(opts, "initializeAll", sealedEpoch, totalSupply, _sfc, _lib, _auth, _driver, _evmWriter, _owner)
}

// InitializeAll is a paid mutator transaction binding the contract method 0x29e83e29.
//
// Solidity: function initializeAll(uint256 sealedEpoch, uint256 totalSupply, address _sfc, address _lib, address _auth, address _driver, address _evmWriter, address _owner) returns()
func (_Contract *ContractSession) InitializeAll(sealedEpoch *big.Int, totalSupply *big.Int, _sfc common.Address, _lib common.Address, _auth common.Address, _driver common.Address, _evmWriter common.Address, _owner common.Address) (*types.Transaction, error) {
	return _Contract.Contract.InitializeAll(&_Contract.TransactOpts, sealedEpoch, totalSupply, _sfc, _lib, _auth, _driver, _evmWriter, _owner)
}

// InitializeAll is a paid mutator transaction binding the contract method 0x29e83e29.
//
// Solidity: function initializeAll(uint256 sealedEpoch, uint256 totalSupply, address _sfc, address _lib, address _auth, address _driver, address _evmWriter, address _owner) returns()
func (_Contract *ContractTransactorSession) InitializeAll(sealedEpoch *big.Int, totalSupply *big.Int, _sfc common.Address, _lib common.Address, _auth common.Address, _driver common.Address, _evmWriter common.Address, _owner common.Address) (*types.Transaction, error) {
	return _Contract.Contract.InitializeAll(&_Contract.TransactOpts, sealedEpoch, totalSupply, _sfc, _lib, _auth, _driver, _evmWriter, _owner)
}

var ContractBinRuntime = "0x608060405234801561001057600080fd5b506004361061002b5760003560e01c806329e83e2914610030575b600080fd5b610098600480360361010081101561004757600080fd5b5080359060208101359073ffffffffffffffffffffffffffffffffffffffff60408201358116916060810135821691608082013581169160a081013582169160c082013581169160e001351661009a565b005b604080517f485cc95500000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8681166004830152848116602483015291519185169163485cc9559160448082019260009290919082900301818387803b15801561011357600080fd5b505af1158015610127573d6000803e3d6000fd5b5050604080517fc0c53b8b00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8a81166004830152878116602483015285811660448301529151918816935063c0c53b8b925060648082019260009290919082900301818387803b1580156101ac57600080fd5b505af11580156101c0573d6000803e3d6000fd5b5050505060006040516101d290610ade565b604051809103906000f0801580156101ee573d6000803e3d6000fd5b5090508073ffffffffffffffffffffffffffffffffffffffff16638129fc1c6040518163ffffffff1660e01b8152600401600060405180830381600087803b15801561023957600080fd5b505af115801561024d573d6000803e3d6000fd5b505050508073ffffffffffffffffffffffffffffffffffffffff1663866c4b176969e10de76676d08000006040518263ffffffff1660e01b815260040180828152602001915050600060405180830381600087803b1580156102ae57600080fd5b505af11580156102c2573d6000803e3d6000fd5b505050508073ffffffffffffffffffffffffffffffffffffffff166381ffcdf16102ea610ad2565b6010026040518263ffffffff1660e01b815260040180828152602001915050600060405180830381600087803b15801561032357600080fd5b505af1158015610337573d6000803e3d6000fd5b505050508073ffffffffffffffffffffffffffffffffffffffff16632ee711326064610361610ad2565b600f028161036b57fe5b046040518263ffffffff1660e01b815260040180828152602001915050600060405180830381600087803b1580156103a257600080fd5b505af11580156103b6573d6000803e3d6000fd5b505050508073ffffffffffffffffffffffffffffffffffffffff16632bb9fe8d60646103e0610ad2565b601402816103ea57fe5b046040518263ffffffff1660e01b815260040180828152602001915050600060405180830381600087803b15801561042157600080fd5b505af1158015610435573d6000803e3d6000fd5b505050508073ffffffffffffffffffffffffffffffffffffffff1663f8d5177e606461045f610ad2565b600a028161046957fe5b046040518263ffffffff1660e01b815260040180828152602001915050600060405180830381600087803b1580156104a057600080fd5b505af11580156104b4573d6000803e3d6000fd5b505050508073ffffffffffffffffffffffffffffffffffffffff16637945ef9960646104de610ad2565b601e02816104e857fe5b046040518263ffffffff1660e01b815260040180828152602001915050600060405180830381600087803b15801561051f57600080fd5b505af1158015610533573d6000803e3d6000fd5b505050508073ffffffffffffffffffffffffffffffffffffffff1663bf25338b621275006040518263ffffffff1660e01b815260040180828152602001915050600060405180830381600087803b15801561058d57600080fd5b505af11580156105a1573d6000803e3d6000fd5b505050508073ffffffffffffffffffffffffffffffffffffffff1663ad7b3f7b6301e133806040518263ffffffff1660e01b815260040180828152602001915050600060405180830381600087803b1580156105fc57600080fd5b505af1158015610610573d6000803e3d6000fd5b505050508073ffffffffffffffffffffffffffffffffffffffff16638f078bfa60036040518263ffffffff1660e01b815260040180828152602001915050600060405180830381600087803b15801561066857600080fd5b505af115801561067c573d6000803e3d6000fd5b505050508073ffffffffffffffffffffffffffffffffffffffff1663455366a462093a806040518263ffffffff1660e01b815260040180828152602001915050600060405180830381600087803b1580156106d657600080fd5b505af11580156106ea573d6000803e3d6000fd5b505050508073ffffffffffffffffffffffffffffffffffffffff1663b6d9edd5672508fab977b917d06040518263ffffffff1660e01b815260040180828152602001915050600060405180830381600087803b15801561074957600080fd5b505af115801561075d573d6000803e3d6000fd5b505050508073ffffffffffffffffffffffffffffffffffffffff16636348ebb8620697806040518263ffffffff1660e01b815260040180828152602001915050600060405180830381600087803b1580156107b757600080fd5b505af11580156107cb573d6000803e3d6000fd5b505050508073ffffffffffffffffffffffffffffffffffffffff16632e84e8e66103e86040518263ffffffff1660e01b815260040180828152602001915050600060405180830381600087803b15801561082457600080fd5b505af1158015610838573d6000803e3d6000fd5b505050508073ffffffffffffffffffffffffffffffffffffffff166343326867621e84806040518263ffffffff1660e01b815260040180828152602001915050600060405180830381600087803b15801561089257600080fd5b505af11580156108a6573d6000803e3d6000fd5b505050508073ffffffffffffffffffffffffffffffffffffffff1663d3f48dbe610e106040518263ffffffff1660e01b815260040180828152602001915050600060405180830381600087803b1580156108ff57600080fd5b505af1158015610913573d6000803e3d6000fd5b505050508073ffffffffffffffffffffffffffffffffffffffff166302b769a164746a5288006040518263ffffffff1660e01b815260040180828152602001915050600060405180830381600087803b15801561096f57600080fd5b505af1158015610983573d6000803e3d6000fd5b505050508073ffffffffffffffffffffffffffffffffffffffff1663f2fde38b836040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050600060405180830381600087803b158015610a0657600080fd5b505af1158015610a1a573d6000803e3d6000fd5b5050604080517f10e51e14000000000000000000000000000000000000000000000000000000008152600481018d9052602481018c905273ffffffffffffffffffffffffffffffffffffffff89811660448301528a81166064830152858116608483015286811660a48301529151918b1693506310e51e14925060c48082019260009290919082900301818387803b158015610ab557600080fd5b505af1158015610ac9573d6000803e3d6000fd5b50600092505050ff5b670de0b6b3a764000090565b611b8180610aec8339019056fe608060405234801561001057600080fd5b50611b61806100206000396000f3fe608060405234801561001057600080fd5b50600436106102765760003560e01c80637945ef9911610160578063ad7b3f7b116100d8578063c74dd6211161008c578063d9a7c1f911610071578063d9a7c1f914610517578063f2fde38b1461051f578063f8d5177e1461055257610276565b8063c74dd621146104f2578063d3f48dbe146104fa57610276565b8063b82b8427116100bd578063b82b8427146104c5578063bf25338b146104cd578063c5f530af146104ea57610276565b8063ad7b3f7b1461048b578063b6d9edd5146104a857610276565b80638da5cb5b1161012f5780638f32d59b116101145780638f32d59b1461045f57806394c3e9141461047b578063a77865151461048357610276565b80638da5cb5b146104115780638f078bfa1461044257610276565b80637945ef99146103b25780638129fc1c146103cf57806381ffcdf1146103d7578063866c4b17146103f457610276565b806338eca546116101f35780635a68f01a116101c25780636348ebb8116101a75780636348ebb814610385578063650acd66146103a2578063715018a6146103aa57610276565b80635a68f01a146103755780635e2308d21461037d57610276565b806338eca5461461032b5780633a3ef66c14610333578063433268671461033b578063455366a41461035857610276565b80632265f2841161024a5780632c8c36a51161022f5780632c8c36a5146102e95780632e84e8e6146102f15780632ee711321461030e57610276565b80632265f284146102c45780632bb9fe8d146102cc57610276565b8062cc7f831461027b57806302b769a1146102955780630d4955e3146102b45780630d7b2609146102bc575b600080fd5b61028361056f565b60408051918252519081900360200190f35b6102b2600480360360208110156102ab57600080fd5b5035610575565b005b610283610684565b61028361068a565b610283610690565b6102b2600480360360208110156102e257600080fd5b5035610696565b61028361075a565b6102b26004803603602081101561030757600080fd5b5035610760565b6102b26004803603602081101561032457600080fd5b503561086c565b610283610930565b610283610936565b6102b26004803603602081101561035157600080fd5b503561093c565b6102b26004803603602081101561036e57600080fd5b5035610a4b565b610283610b59565b610283610b5f565b6102b26004803603602081101561039b57600080fd5b5035610b65565b610283610c73565b6102b2610c79565b6102b2600480360360208110156103c857600080fd5b5035610d41565b6102b2610e6e565b6102b2600480360360208110156103ed57600080fd5b5035610f71565b6102b26004803603602081101561040a57600080fd5b503561108a565b6104196111a7565b6040805173ffffffffffffffffffffffffffffffffffffffff9092168252519081900360200190f35b6102b26004803603602081101561045857600080fd5b50356111c3565b6104676112cd565b604080519115158252519081900360200190f35b6102836112eb565b6102836112f1565b6102b2600480360360208110156104a157600080fd5b50356112f7565b6102b2600480360360208110156104be57600080fd5b5035611406565b61028361151f565b6102b2600480360360208110156104e357600080fd5b5035611525565b610283611633565b610283611639565b6102b26004803603602081101561051057600080fd5b503561163f565b61028361174b565b6102b26004803603602081101561053557600080fd5b503573ffffffffffffffffffffffffffffffffffffffff16611751565b6102b26004803603602081101561056857600080fd5b50356117b3565b60725481565b61057d6112cd565b6105ce576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b6001811015610624576040805162461bcd60e51b815260206004820152600f60248201527f746f6f20736d616c6c2076616c75650000000000000000000000000000000000604482015290519081900360640190fd5b6509184e72a00081111561067f576040805162461bcd60e51b815260206004820152600f60248201527f746f6f206c617267652076616c75650000000000000000000000000000000000604482015290519081900360640190fd5b607555565b606d5481565b606c5481565b60675481565b61069e6112cd565b6106ef576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b60026106f9611877565b8161070057fe5b04811115610755576040805162461bcd60e51b815260206004820152600f60248201527f746f6f206c617267652076616c75650000000000000000000000000000000000604482015290519081900360640190fd5b606955565b60745481565b6107686112cd565b6107b9576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b606481101561080f576040805162461bcd60e51b815260206004820152600f60248201527f746f6f20736d616c6c2076616c75650000000000000000000000000000000000604482015290519081900360640190fd5b620f4240811115610867576040805162461bcd60e51b815260206004820152600f60248201527f746f6f206c617267652076616c75650000000000000000000000000000000000604482015290519081900360640190fd5b607155565b6108746112cd565b6108c5576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b60026108cf611877565b816108d657fe5b0481111561092b576040805162461bcd60e51b815260206004820152600f60248201527f746f6f206c617267652076616c75650000000000000000000000000000000000604482015290519081900360640190fd5b606855565b60755481565b60735481565b6109446112cd565b610995576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b620f42408110156109ed576040805162461bcd60e51b815260206004820152600f60248201527f746f6f20736d616c6c2076616c75650000000000000000000000000000000000604482015290519081900360640190fd5b631dcd6500811115610a46576040805162461bcd60e51b815260206004820152600f60248201527f746f6f206c617267652076616c75650000000000000000000000000000000000604482015290519081900360640190fd5b607355565b610a536112cd565b610aa4576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b62015180811015610afc576040805162461bcd60e51b815260206004820152600f60248201527f746f6f20736d616c6c2076616c75650000000000000000000000000000000000604482015290519081900360640190fd5b62278d00811115610b54576040805162461bcd60e51b815260206004820152600f60248201527f746f6f206c617267652076616c75650000000000000000000000000000000000604482015290519081900360640190fd5b606f55565b60715481565b606b5481565b610b6d6112cd565b610bbe576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b62015180811015610c16576040805162461bcd60e51b815260206004820152600f60248201527f746f6f20736d616c6c2076616c75650000000000000000000000000000000000604482015290519081900360640190fd5b620d2f00811115610c6e576040805162461bcd60e51b815260206004820152600f60248201527f746f6f206c617267652076616c75650000000000000000000000000000000000604482015290519081900360640190fd5b607255565b606e5481565b610c816112cd565b610cd2576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b60335460405160009173ffffffffffffffffffffffffffffffffffffffff16907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3603380547fffffffffffffffffffffffff0000000000000000000000000000000000000000169055565b610d496112cd565b610d9a576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b6064610da4611877565b60050281610dae57fe5b04811015610e03576040805162461bcd60e51b815260206004820152600f60248201527f746f6f20736d616c6c2076616c75650000000000000000000000000000000000604482015290519081900360640190fd5b6002610e0d611877565b81610e1457fe5b04811115610e69576040805162461bcd60e51b815260206004820152600f60248201527f746f6f206c617267652076616c75650000000000000000000000000000000000604482015290519081900360640190fd5b606b55565b600054610100900460ff1680610e875750610e87611883565b80610e95575060005460ff16155b610ed05760405162461bcd60e51b815260040180806020018281038252602e815260200180611aff602e913960400191505060405180910390fd5b600054610100900460ff16158015610f3657600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff909116610100171660011790555b610f3f33611889565b8015610f6e57600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff1690555b50565b610f796112cd565b610fca576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b610fd2611877565b811015611026576040805162461bcd60e51b815260206004820152600f60248201527f746f6f20736d616c6c2076616c75650000000000000000000000000000000000604482015290519081900360640190fd5b61102e611877565b601f02811115611085576040805162461bcd60e51b815260206004820152600f60248201527f746f6f206c617267652076616c75650000000000000000000000000000000000604482015290519081900360640190fd5b606755565b6110926112cd565b6110e3576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b69152d02c7e14af6800000811015611142576040805162461bcd60e51b815260206004820152600f60248201527f746f6f20736d616c6c2076616c75650000000000000000000000000000000000604482015290519081900360640190fd5b6a084595161401484a0000008111156111a2576040805162461bcd60e51b815260206004820152600f60248201527f746f6f206c617267652076616c75650000000000000000000000000000000000604482015290519081900360640190fd5b606655565b60335473ffffffffffffffffffffffffffffffffffffffff1690565b6111cb6112cd565b61121c576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b6002811015611272576040805162461bcd60e51b815260206004820152600f60248201527f746f6f20736d616c6c2076616c75650000000000000000000000000000000000604482015290519081900360640190fd5b60648111156112c8576040805162461bcd60e51b815260206004820152600f60248201527f746f6f206c617267652076616c75650000000000000000000000000000000000604482015290519081900360640190fd5b606e55565b60335473ffffffffffffffffffffffffffffffffffffffff16331490565b606a5481565b60685481565b6112ff6112cd565b611350576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b62278d008110156113a8576040805162461bcd60e51b815260206004820152600f60248201527f746f6f20736d616c6c2076616c75650000000000000000000000000000000000604482015290519081900360640190fd5b630784ce00811115611401576040805162461bcd60e51b815260206004820152600f60248201527f746f6f206c617267652076616c75650000000000000000000000000000000000604482015290519081900360640190fd5b606d55565b61140e6112cd565b61145f576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b6706f05b59d3b200008110156114bc576040805162461bcd60e51b815260206004820152600f60248201527f746f6f20736d616c6c2076616c75650000000000000000000000000000000000604482015290519081900360640190fd5b6801bc16d674ec80000081111561151a576040805162461bcd60e51b815260206004820152600f60248201527f746f6f206c617267652076616c75650000000000000000000000000000000000604482015290519081900360640190fd5b607055565b606f5481565b61152d6112cd565b61157e576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b620151808110156115d6576040805162461bcd60e51b815260206004820152600f60248201527f746f6f20736d616c6c2076616c75650000000000000000000000000000000000604482015290519081900360640190fd5b62278d0081111561162e576040805162461bcd60e51b815260206004820152600f60248201527f746f6f206c617267652076616c75650000000000000000000000000000000000604482015290519081900360640190fd5b606c55565b60665481565b60695481565b6116476112cd565b611698576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b60648110156116ee576040805162461bcd60e51b815260206004820152600f60248201527f746f6f20736d616c6c2076616c75650000000000000000000000000000000000604482015290519081900360640190fd5b620d2f00811115611746576040805162461bcd60e51b815260206004820152600f60248201527f746f6f206c617267652076616c75650000000000000000000000000000000000604482015290519081900360640190fd5b607455565b60705481565b6117596112cd565b6117aa576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b610f6e816119f8565b6117bb6112cd565b61180c576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b6002611816611877565b8161181d57fe5b04811115611872576040805162461bcd60e51b815260206004820152600f60248201527f746f6f206c617267652076616c75650000000000000000000000000000000000604482015290519081900360640190fd5b606a55565b670de0b6b3a764000090565b303b1590565b600054610100900460ff16806118a257506118a2611883565b806118b0575060005460ff16155b6118eb5760405162461bcd60e51b815260040180806020018281038252602e815260200180611aff602e913960400191505060405180910390fd5b600054610100900460ff1615801561195157600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff909116610100171660011790555b603380547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff84811691909117918290556040519116906000907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a380156119f457600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff1690555b5050565b73ffffffffffffffffffffffffffffffffffffffff8116611a4a5760405162461bcd60e51b8152600401808060200182810382526026815260200180611ad96026913960400191505060405180910390fd5b60335460405173ffffffffffffffffffffffffffffffffffffffff8084169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3603380547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff9290921691909117905556fe4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373436f6e747261637420696e7374616e63652068617320616c7265616479206265656e20696e697469616c697a6564a265627a7a72315820a66ff1d0075ebc7eff9c2e0ad68fcc90ad880a3accd69c8990de69bb6643eb1964736f6c63430005110032a265627a7a72315820fcecf216ff5beb5aad4fb1a418703d008592779b9404dec9428d69d97c7de14764736f6c63430005110032"
